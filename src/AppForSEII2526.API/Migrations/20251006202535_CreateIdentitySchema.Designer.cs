// <auto-generated />
using System;
using AppForSEII2526.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppForSEII2526.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006202535_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido_1Cliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Apellido_2Cliente")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("NumBocadillos")
                        .HasColumnType("int");

                    b.Property<double>("PrecioTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.HasKey("Id");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.Property<int>("BocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("NombreBocadillo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<string>("TipoPan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BocadilloId", "CompraId");

                    b.HasIndex("CompraId");

                    b.ToTable("CompraBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoBono1")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ApellidoBono2")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("NBonos")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<double>("PrecioTotalBono")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CompraBono");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra_Producto", b =>
                {
                    b.Property<int>("Compraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Compraid"));

                    b.Property<string>("Apellido_1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Apellido_2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DireccionEnvio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metodo_Pago")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PrecioFinal")
                        .HasColumnType("int");

                    b.HasKey("Compraid");

                    b.ToTable("Compra_Producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PVP")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("TipoProductoProductoId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("TipoProductoProductoId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto_Compra", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId1")
                        .HasColumnType("int");

                    b.Property<double>("PVP")
                        .HasColumnType("float");

                    b.Property<int>("ResenyaId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId", "CompraId");

                    b.HasIndex("CompraId");

                    b.HasIndex("ResenyaId");

                    b.ToTable("Producto_Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("TipoPan");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoProducto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ProductoId");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("Bocadillo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PVP")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Tamano")
                        .HasColumnType("int");

                    b.Property<string>("Tamanyo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("TipoPanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoPanId");

                    b.ToTable("Bocadillo");
                });

            modelBuilder.Entity("BonoBocadillo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroBocadillos")
                        .HasColumnType("int");

                    b.Property<double>("PrecioPorBono")
                        .HasColumnType("float");

                    b.Property<int>("TipoBocadilloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoBocadilloId");

                    b.ToTable("BonoBocadillo");
                });

            modelBuilder.Entity("BonosComprados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BonoBocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraBonoId")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<double>("PrecioBono")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasAlternateKey("Id", "IdCompra");

                    b.HasIndex("BonoBocadilloId");

                    b.HasIndex("CompraBonoId");

                    b.ToTable("BonosComprados");
                });

            modelBuilder.Entity("Resenya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resenya");
                });

            modelBuilder.Entity("ResenyaBocadillo", b =>
                {
                    b.Property<int>("BocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("ResenyaId")
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("BocadilloId", "ResenyaId");

                    b.HasAlternateKey("ResenyaId", "BocadilloId");

                    b.ToTable("ResenyaBocadillo");
                });

            modelBuilder.Entity("TipoBocadillo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("TipoBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.HasOne("Bocadillo", "Bocadillo")
                        .WithMany("CompraBocadillo")
                        .HasForeignKey("BocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Compra", "Compra")
                        .WithMany("CompraBocadillo")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bocadillo");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoProducto", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("TipoProductoProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto_Compra", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Compra_Producto", "compra")
                        .WithMany()
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Producto", "Producto")
                        .WithMany("producto_Compras")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resenya", "Resenya")
                        .WithMany()
                        .HasForeignKey("ResenyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Resenya");

                    b.Navigation("compra");
                });

            modelBuilder.Entity("Bocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoPan", "TipoPan")
                        .WithMany("Bocadillos")
                        .HasForeignKey("TipoPanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPan");
                });

            modelBuilder.Entity("BonoBocadillo", b =>
                {
                    b.HasOne("TipoBocadillo", "TipoBocadillo")
                        .WithMany("BonoBocadillo")
                        .HasForeignKey("TipoBocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoBocadillo");
                });

            modelBuilder.Entity("BonosComprados", b =>
                {
                    b.HasOne("BonoBocadillo", "BonoBocadillo")
                        .WithMany("BonosComprados")
                        .HasForeignKey("BonoBocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.CompraBono", "CompraBono")
                        .WithMany("BonosComprados")
                        .HasForeignKey("CompraBonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BonoBocadillo");

                    b.Navigation("CompraBono");
                });

            modelBuilder.Entity("ResenyaBocadillo", b =>
                {
                    b.HasOne("Bocadillo", "Bocadillo")
                        .WithMany("ResenyasBocadillo")
                        .HasForeignKey("BocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resenya", "Resenya")
                        .WithMany("ResenyaBocadillos")
                        .HasForeignKey("ResenyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bocadillo");

                    b.Navigation("Resenya");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Navigation("CompraBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.Navigation("BonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.Navigation("producto_Compras");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.Navigation("Bocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Bocadillo", b =>
                {
                    b.Navigation("CompraBocadillo");

                    b.Navigation("ResenyasBocadillo");
                });

            modelBuilder.Entity("BonoBocadillo", b =>
                {
                    b.Navigation("BonosComprados");
                });

            modelBuilder.Entity("Resenya", b =>
                {
                    b.Navigation("ResenyaBocadillos");
                });

            modelBuilder.Entity("TipoBocadillo", b =>
                {
                    b.Navigation("BonoBocadillo");
                });
#pragma warning restore 612, 618
        }
    }
}
